{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/Vtodo/my-todos/src/components/TodoInput.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoInput = ({\n  todo,\n  index,\n  setTodos\n}) => {\n  const handleInputChange = e => {\n    const updatedTodos = [...todos];\n    updatedTodos[index].inputValue = e.target.value;\n    setTodos(updatedTodos);\n  };\n  const handleAddItem = e => {\n    if (e.key === \"Enter\" && todo.inputValue.trim() !== \"\") {\n      const updatedTodos = [...todos];\n      updatedTodos[index].items.push({\n        text: todo.inputValue.trim(),\n        completed: false\n      });\n      updatedTodos[index].inputValue = \"\";\n      setTodos(updatedTodos);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"text\",\n    placeholder: \"Add a task and press Enter\",\n    value: todo.inputValue,\n    onChange: handleInputChange,\n    onKeyDown: handleAddItem\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoInput;\nexport default TodoInput;\nvar _c;\n$RefreshReg$(_c, \"TodoInput\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TodoInput","todo","index","setTodos","handleInputChange","e","updatedTodos","todos","inputValue","target","value","handleAddItem","key","trim","items","push","text","completed","type","placeholder","onChange","onKeyDown","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/macbookpro/Desktop/Vtodo/my-todos/src/components/TodoInput.tsx"],"sourcesContent":["import React from \"react\";\nimport { Todo } from \"./types\";\n\ninterface TodoInputProps {\n  todo: Todo;\n  index: number;\n\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n  todos: Todo[];\n}\n\nconst TodoInput: React.FC<TodoInputProps> = ({ todo, index, setTodos }) => {\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const updatedTodos = [...todos];\n    updatedTodos[index].inputValue = e.target.value;\n    setTodos(updatedTodos);\n  };\n\n  const handleAddItem = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === \"Enter\" && todo.inputValue.trim() !== \"\") {\n      const updatedTodos = [...todos];\n      updatedTodos[index].items.push({\n        text: todo.inputValue.trim(),\n        completed: false,\n      });\n      updatedTodos[index].inputValue = \"\";\n      setTodos(updatedTodos);\n    }\n  };\n\n  return (\n    <input\n      type=\"text\"\n      placeholder=\"Add a task and press Enter\"\n      value={todo.inputValue}\n      onChange={handleInputChange}\n      onKeyDown={handleAddItem}\n    />\n  );\n};\n\nexport default TodoInput;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW1B,MAAMC,SAAmC,GAAGA,CAAC;EAAEC,IAAI;EAAEC,KAAK;EAAEC;AAAS,CAAC,KAAK;EACzE,MAAMC,iBAAiB,GAAIC,CAAsC,IAAK;IACpE,MAAMC,YAAY,GAAG,CAAC,GAAGC,KAAK,CAAC;IAC/BD,YAAY,CAACJ,KAAK,CAAC,CAACM,UAAU,GAAGH,CAAC,CAACI,MAAM,CAACC,KAAK;IAC/CP,QAAQ,CAACG,YAAY,CAAC;EACxB,CAAC;EAED,MAAMK,aAAa,GAAIN,CAAwC,IAAK;IAClE,IAAIA,CAAC,CAACO,GAAG,KAAK,OAAO,IAAIX,IAAI,CAACO,UAAU,CAACK,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACtD,MAAMP,YAAY,GAAG,CAAC,GAAGC,KAAK,CAAC;MAC/BD,YAAY,CAACJ,KAAK,CAAC,CAACY,KAAK,CAACC,IAAI,CAAC;QAC7BC,IAAI,EAAEf,IAAI,CAACO,UAAU,CAACK,IAAI,CAAC,CAAC;QAC5BI,SAAS,EAAE;MACb,CAAC,CAAC;MACFX,YAAY,CAACJ,KAAK,CAAC,CAACM,UAAU,GAAG,EAAE;MACnCL,QAAQ,CAACG,YAAY,CAAC;IACxB;EACF,CAAC;EAED,oBACEP,OAAA;IACEmB,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,4BAA4B;IACxCT,KAAK,EAAET,IAAI,CAACO,UAAW;IACvBY,QAAQ,EAAEhB,iBAAkB;IAC5BiB,SAAS,EAAEV;EAAc;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEN,CAAC;AAACC,EAAA,GA5BI1B,SAAmC;AA8BzC,eAAeA,SAAS;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}