{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/Vtodo/my-todos/src/components/TodoList.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = ({\n  todos\n}) => {\n  const handleAddTodo = color => {\n    const newTodo = {\n      color,\n      items: [],\n      inputValue: \"\"\n    };\n    setTodos(prevTodos => [...prevTodos, newTodo]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleAddTodo(\"blue\"),\n      children: \"Add Blue Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), todos.map((todo, index) => /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      index: index,\n      setTodos: setTodos\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TodoList","todos","handleAddTodo","color","newTodo","items","inputValue","setTodos","prevTodos","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","todo","index","TodoItem","_c","$RefreshReg$"],"sources":["/Users/macbookpro/Desktop/Vtodo/my-todos/src/components/TodoList.tsx"],"sourcesContent":["import React from \"react\";\nimport { Todo } from \"./types\";\ninterface TodoListProps {\n  todos: Todo[];\n  setTodos: React.Dispatch<React.SetStateAction<Todo[]>>;\n}\nconst TodoList: React.FC<TodoListProps> = ({ todos }) => {\n  const handleAddTodo = (color: string) => {\n    const newTodo: Todo = { color, items: [], inputValue: \"\" };\n    setTodos((prevTodos) => [...prevTodos, newTodo]);\n  };\n  return (\n    <div>\n      <button onClick={() => handleAddTodo(\"blue\")}>Add Blue Todo</button>\n      {todos.map((todo, index) => (\n        <TodoItem key={index} todo={todo} index={index} setTodos={setTodos} />\n      ))}\n    </div>\n  );\n};\n\nexport default TodoList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM1B,MAAMC,QAAiC,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EACvD,MAAMC,aAAa,GAAIC,KAAa,IAAK;IACvC,MAAMC,OAAa,GAAG;MAAED,KAAK;MAAEE,KAAK,EAAE,EAAE;MAAEC,UAAU,EAAE;IAAG,CAAC;IAC1DC,QAAQ,CAAEC,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEJ,OAAO,CAAC,CAAC;EAClD,CAAC;EACD,oBACEL,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAQW,OAAO,EAAEA,CAAA,KAAMR,aAAa,CAAC,MAAM,CAAE;MAAAO,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACnEb,KAAK,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBlB,OAAA,CAACmB,QAAQ;MAAaF,IAAI,EAAEA,IAAK;MAACC,KAAK,EAAEA,KAAM;MAACV,QAAQ,EAAEA;IAAS,GAApDU,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiD,CACtE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACK,EAAA,GAbInB,QAAiC;AAevC,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}